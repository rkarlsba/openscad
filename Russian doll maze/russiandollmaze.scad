// Russian Doll Maze Puzzle Box by RevK 
// All credits go to Adrian Kennard www.me.uk
// https://www.thingiverse.com/thing:2410748
// Released under licensed under the Creative Commons - Attribution license
// http://www.revk.uk/2017/06/amazing.html
// parameters: /75/15/5/ : auto generated base code and mazes from:
// http://e.gg/puzzlebox.cgi/75/15/5/oo Inner box
// http://e.gg/puzzlebox.cgi/75/15/5/io Next box
// http://e.gg/puzzlebox.cgi/75/15/5/ii Outer box, and lid
// 
// Modified by AJMartel [3DFabXYZ.com]
// https://www.thingiverse.com/thing:2607374
// Rev 1: Added Maze Models directly to OpenSCAD source.
// Rev 2: Added Customizer Options
// Rev 3: Added Outer Generate Lid, Base or Both.

// The Following 4 Variables are Customizable.

// Choose your Maze Model 1-10.
model = "1"; // [1,2,3,4,5,6,7,8,9,10]
// Choose the part you want to generate.
part="outer"; // ["inner":Inside Maze, "center":Center Maze, "outer":Outside Maze with Lid]
// Adjust the Clearance between parts.
m=0.4; // [0.2:0.1:2] 
// slider, step size .1
// Set Outer part(s) to generate
piece = "baseAndLid"; // ["baseOnly":Generate Base, "lidOnly":Generate Lid, "baseAndLid":Generate Base and Lid]

//DO NOT MODIFY THE FOLLOWING CODE IF YOU WANT THIS TO WORK//
/* [Hidden] */
p=2*1;	    // Paths
s=5*1;	    // Spacing (unit)
bh=8*1;	    // Base height
wt=3*1;	    // Wall thickness
iw=2*1;	    // Inside wall thickness
base=1*1;	// Print base
k=0*1;	    // Skew
i=0*1;	    // Inside (maze inside lid)
inner = (part=="inner")?1:0;
center = (part=="center")?1:0;
outer = (part=="outer")?1:0;
h=(outer==1)?14:13;	                // Height in units
w=(outer==1)?26:(center==1)?20:14;	// Width in units
bs=(outer==1)?10:(center==1)?8:4;	// Base sides
bd=(outer==1)?48:(center==1)?42:33;	// Base diameter
ih=(outer==1)?78:75;	            // Inside height
eh=(inner==1)?5:8;	                // Extra height
id=(outer==1)?33:(center==1)?24:15;	// Inside diameter
lid=(outer==1)?1:0;	                // Print lid
is=(outer==1)?2:(center==1)?1:0;	// Inside Russian
os=(outer==1)?0:(center==1)?1:2;	// Outside Russian

//Inner Mazes

st01=6;  // Start point
ex01=5;  // Exit point
maze01=[
[1,2,3,1,1,2,3,1,2,3,1,1,2,3],
[3,0,0,3,0,2,0,3,0,0,3,0,2,0],
[0,3,3,3,1,1,3,0,3,3,3,1,1,3],
[2,0,2,0,2,2,0,2,0,2,0,2,2,0],
[3,1,1,0,2,1,1,3,1,1,0,2,1,1],
[1,1,1,2,2,2,3,1,1,1,2,2,2,3],
[0,3,1,2,2,1,1,0,3,1,2,2,1,1],
[0,1,2,0,1,1,3,0,1,2,0,1,1,3],
[2,2,2,3,3,1,1,2,2,2,3,3,1,1],
[2,2,3,0,3,3,0,2,2,3,0,3,3,0],
[1,0,2,2,2,2,2,1,0,2,2,2,2,2],
[3,1,0,1,0,2,3,3,1,0,1,0,2,3],
[1,1,1,1,0,0,0,1,1,1,1,0,0,0]];

st02=5;  // Start point
ex02=7;  // Exit point
maze02=[
[3,0,3,1,2,3,1,3,0,3,1,2,3,1],
[1,1,0,2,2,0,2,1,1,0,2,2,0,2],
[2,3,0,3,1,2,2,2,3,0,3,1,2,2],
[1,2,1,3,0,2,2,1,2,1,3,0,2,2],
[1,2,2,0,3,0,3,1,2,2,0,3,0,3],
[0,1,2,3,0,2,3,0,1,2,3,0,2,3],
[2,3,1,0,1,1,1,2,3,1,0,1,1,1],
[0,3,3,3,1,2,3,0,3,3,3,1,2,3],
[1,0,0,1,0,2,2,1,0,0,1,0,2,2],
[1,2,3,2,3,0,1,1,2,3,2,3,0,1],
[1,2,2,1,2,2,1,1,2,2,1,2,2,1],
[2,0,1,0,2,1,2,2,0,1,0,2,1,2],
[1,1,1,1,1,1,0,1,1,1,1,1,1,0]];

st03=4;   // Start point
ex03=12;  // Exit point
maze03=[
[3,3,1,0,3,3,2,3,3,1,0,3,3,2],
[2,1,1,2,0,2,0,2,1,1,2,0,2,0],
[3,3,0,2,1,1,1,3,3,0,2,1,1,1],
[0,2,1,0,3,3,0,0,2,1,0,3,3,0],
[2,2,2,3,0,2,1,2,2,2,3,0,2,1],
[1,1,1,0,3,0,3,1,1,1,0,3,0,3],
[0,3,0,3,2,3,3,0,3,0,3,2,3,3],
[0,2,3,2,2,2,1,0,2,3,2,2,2,1],
[2,3,2,2,2,1,1,2,3,2,2,2,1,1],
[0,2,2,2,1,0,3,0,2,2,2,1,0,3],
[2,0,2,0,1,2,2,2,0,2,0,1,2,2],
[1,2,1,1,0,2,2,1,2,1,1,0,2,2],
[1,1,1,1,1,0,1,1,1,1,1,1,0,1]];

st04=4;	// Start point
ex04=1;	// Exit point
maze04=[
[1,3,1,2,1,1,1,1,3,1,2,1,1,1],
[0,1,0,2,3,1,1,0,1,0,2,3,1,1],
[1,1,2,1,1,1,1,1,1,2,1,1,1,1],
[1,2,1,1,1,1,1,1,2,1,1,1,1,1],
[1,1,2,3,0,3,2,1,1,2,3,0,3,2],
[3,0,2,3,2,0,3,3,0,2,3,2,0,3],
[3,3,0,0,2,2,2,3,3,0,0,2,2,2],
[0,1,3,3,2,3,0,0,1,3,3,2,3,0],
[1,0,2,0,2,0,3,1,0,2,0,2,0,3],
[1,1,2,2,2,2,2,1,1,2,2,2,2,2],
[1,2,2,3,2,2,1,1,2,2,3,2,2,1],
[0,2,2,0,1,1,1,0,2,2,0,1,1,1],
[1,0,1,1,1,1,1,1,0,1,1,1,1,1]];

st05=1;	// Start point
ex05=6;	// Exit point
maze05=[
[1,2,3,1,1,1,1,1,2,3,1,1,1,1],
[1,2,3,0,3,3,2,1,2,3,0,3,3,2],
[2,2,1,2,2,0,1,2,2,1,2,2,0,1],
[2,1,0,2,1,3,0,2,1,0,2,1,3,0],
[0,3,2,2,2,0,3,0,3,2,2,2,0,3],
[1,0,2,2,1,2,2,1,0,2,2,1,2,2],
[1,2,2,2,1,2,0,1,2,2,2,1,2,0],
[3,2,2,1,2,2,2,3,2,2,1,2,2,2],
[0,1,1,1,0,3,3,0,1,1,1,0,3,3],
[3,1,1,3,2,0,3,3,1,1,3,2,0,3],
[2,2,2,2,2,3,0,2,2,2,2,2,3,0],
[1,0,2,1,0,3,0,1,0,2,1,0,3,0],
[1,1,1,1,1,0,1,1,1,1,1,1,0,1]];

st06=1;	// Start point
ex06=6;	// Exit point
maze06=[
[3,2,1,1,3,1,1,3,2,1,1,3,1,1],
[0,1,2,3,0,1,1,0,1,2,3,0,1,1],
[2,2,0,1,1,1,1,2,2,0,1,1,1,1],
[2,1,1,2,3,3,0,2,1,1,2,3,3,0],
[2,1,2,1,0,1,1,2,1,2,1,0,1,1],
[1,1,2,3,2,3,0,1,1,2,3,2,3,0],
[1,1,2,2,1,0,1,1,1,2,2,1,0,1],
[3,1,2,2,1,1,2,3,1,2,2,1,1,2],
[0,3,2,1,2,1,3,0,3,2,1,2,1,3],
[1,0,3,1,1,2,0,1,0,3,1,1,2,0],
[1,0,2,3,1,1,1,1,0,2,3,1,1,1],
[1,1,2,2,1,1,1,1,1,2,2,1,1,1],
[1,1,0,1,1,1,0,1,1,0,1,1,1,0]];

st07=5;	// Start point
ex07=8;	// Exit point
maze07=[
[1,1,1,1,3,0,3,1,1,1,1,3,0,3],
[1,2,1,1,0,3,1,1,2,1,1,0,3,1],
[3,0,3,2,2,2,3,3,0,3,2,2,2,3],
[3,0,2,0,2,2,2,3,0,2,0,2,2,2],
[2,3,2,3,0,2,2,2,3,2,3,0,2,2],
[0,2,0,3,2,2,0,0,2,0,3,2,2,0],
[1,1,2,2,0,1,2,1,1,2,2,0,1,2],
[0,3,2,1,1,1,3,0,3,2,1,1,1,3],
[1,0,2,3,1,2,1,1,0,2,3,1,2,1],
[3,2,2,2,2,2,2,3,2,2,2,2,2,2],
[0,1,2,2,3,1,2,0,1,2,2,3,1,2],
[1,2,3,0,2,1,0,1,2,3,0,2,1,0],
[1,0,0,1,1,1,1,1,0,0,1,1,1,1]];

st08=2;	// Start point
ex08=3;	// Exit point
maze08=[
[3,0,1,1,3,1,0,3,0,1,1,3,1,0],
[2,3,1,0,1,3,1,2,3,1,0,1,3,1],
[2,1,3,1,2,1,2,2,1,3,1,2,1,2],
[1,2,1,2,1,0,2,1,2,1,2,1,0,2],
[1,1,2,2,1,2,0,1,1,2,2,1,2,0],
[1,2,2,3,1,1,1,1,2,2,3,1,1,1],
[1,3,0,1,3,2,2,1,3,0,1,3,2,2],
[0,1,2,1,2,2,3,0,1,2,1,2,2,3],
[3,0,2,2,2,2,1,3,0,2,2,2,2,1],
[3,3,2,2,2,1,2,3,3,2,2,2,1,2],
[0,0,1,2,1,2,2,0,0,1,2,1,2,2],
[1,3,2,0,3,2,2,1,3,2,0,3,2,2],
[1,0,0,1,0,0,1,1,0,0,1,0,0,1]];

st09=1;	// Start point
ex09=12;	// Exit point
maze09=[
[1,0,3,2,1,1,3,1,0,3,2,1,1,3],
[1,1,2,1,1,2,1,1,1,2,1,1,2,1],
[1,2,0,2,3,1,0,1,2,0,2,3,1,0],
[2,1,2,2,2,3,1,2,1,2,2,2,3,1],
[0,3,1,0,1,0,3,0,3,1,0,1,0,3],
[2,1,2,3,0,3,1,2,1,2,3,0,3,1],
[0,2,2,1,1,2,3,0,2,2,1,1,2,3],
[3,0,3,1,2,2,2,3,0,3,1,2,2,2],
[0,3,2,1,0,0,3,0,3,2,1,0,0,3],
[3,0,2,1,3,2,1,3,0,2,1,3,2,1],
[2,2,1,0,2,3,0,2,2,1,0,2,3,0],
[3,1,2,1,0,2,3,3,1,2,1,0,2,3],
[1,0,1,1,1,0,0,1,0,1,1,1,0,0]];

st0A=1;	// Start point
ex0A=12;	// Exit point
maze0A=[
[2,1,3,2,1,1,1,2,1,3,2,1,1,1],
[1,2,2,1,1,1,2,1,2,2,1,1,1,2],
[2,2,0,3,2,3,2,2,2,0,3,2,3,2],
[0,1,1,2,0,2,1,0,1,1,2,0,2,1],
[3,3,2,1,1,1,1,3,3,2,1,1,1,1],
[0,2,0,3,1,1,2,0,2,0,3,1,1,2],
[3,3,0,0,2,3,0,3,3,0,0,2,3,0],
[2,0,3,1,2,1,1,2,0,3,1,2,1,1],
[3,0,2,3,0,3,0,3,0,2,3,0,3,0],
[1,1,0,3,1,1,0,1,1,0,3,1,1,0],
[1,2,3,0,1,1,1,1,2,3,0,1,1,1],
[2,2,2,1,3,1,1,2,2,2,1,3,1,1],
[1,0,1,1,0,1,1,1,0,1,1,0,1,1]];

//Middle Mazes

st11=3;	  // Start point
ex11=18;  // Exit point
maze11=[
[2,3,2,3,2,3,0,1,1,3,2,3,2,3,2,3,0,1,1,3],
[0,2,2,0,2,2,2,3,0,2,0,2,2,0,2,2,2,3,0,2],
[1,0,3,0,1,2,2,1,2,3,1,0,3,0,1,2,2,1,2,3],
[0,2,1,1,1,0,1,2,3,1,0,2,1,1,1,0,1,2,3,1],
[0,3,2,1,3,1,0,2,3,3,0,3,2,1,3,1,0,2,3,3],
[0,2,1,1,1,1,2,2,2,1,0,2,1,1,1,1,2,2,2,1],
[2,3,1,1,1,2,2,3,0,3,2,3,1,1,1,2,2,3,0,3],
[1,0,1,1,1,0,3,1,0,0,1,0,1,1,1,0,3,1,0,0],
[2,2,3,2,1,2,3,2,1,1,2,2,3,2,1,2,3,2,1,1],
[0,2,2,1,1,1,0,1,1,1,0,2,2,1,1,1,0,1,1,1],
[1,2,1,2,3,0,3,3,1,1,1,2,1,2,3,0,3,3,1,1],
[0,2,3,0,3,2,0,2,3,1,0,2,3,0,3,2,0,2,3,1],
[1,0,1,1,0,1,1,0,1,1,1,0,1,1,0,1,1,0,1,1]];

st12=4;	  // Start point
ex12=15;  // Exit point
maze12=[
[1,3,0,3,0,3,1,1,1,1,1,3,0,3,0,3,1,1,1,1],
[2,2,2,3,1,0,1,3,2,1,2,2,2,3,1,0,1,3,2,1],
[2,3,0,1,1,2,3,0,1,0,2,3,0,1,1,2,3,0,1,0],
[1,2,3,1,2,1,0,3,3,0,1,2,3,1,2,1,0,3,3,0],
[2,2,1,2,3,2,1,0,1,3,2,2,1,2,3,2,1,0,1,3],
[2,1,1,0,0,2,3,1,2,0,2,1,1,0,0,2,3,1,2,0],
[1,1,2,2,3,2,2,1,2,3,1,1,2,2,3,2,2,1,2,3],
[1,2,1,2,2,0,1,2,0,3,1,2,1,2,2,0,1,2,0,3],
[2,2,2,1,1,1,1,0,3,0,2,2,2,1,1,1,1,0,3,0],
[2,1,1,1,1,1,0,2,1,2,2,1,1,1,1,1,0,2,1,2],
[1,2,2,3,1,1,1,1,2,3,1,2,2,3,1,1,1,1,2,3],
[0,1,0,2,1,2,3,0,1,1,0,1,0,2,1,2,3,0,1,1],
[1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1]];

st13=7;	  // Start point
ex13=16;  // Exit point
maze13=[
[2,3,1,0,2,3,0,1,3,1,2,3,1,0,2,3,0,1,3,1],
[2,3,1,1,0,3,3,0,2,1,2,3,1,1,0,3,3,0,2,1],
[2,3,1,3,1,0,0,1,0,1,2,3,1,3,1,0,0,1,0,1],
[0,2,2,1,1,1,1,1,1,1,0,2,2,1,1,1,1,1,1,1],
[0,2,3,1,3,3,1,1,1,1,0,2,3,1,3,3,1,1,1,1],
[2,1,2,2,2,3,1,0,3,0,2,1,2,2,2,3,1,0,3,0],
[1,1,0,3,0,1,1,2,1,1,1,1,0,3,0,1,1,2,1,1],
[3,3,2,0,3,0,3,2,1,1,3,3,2,0,3,0,3,2,1,1],
[0,0,1,2,2,2,2,1,1,1,0,0,1,2,2,2,2,1,1,1],
[2,1,2,2,3,0,1,1,2,3,2,1,2,2,3,0,1,1,2,3],
[1,2,1,0,1,1,2,3,0,0,1,2,1,0,1,1,2,3,0,0],
[2,1,3,1,1,0,1,2,1,3,2,1,3,1,1,0,1,2,1,3],
[1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,0]];


st14=9;	// Start point
ex14=1;	// Exit point
maze14=[
[3,0,2,1,1,3,1,2,2,2,3,0,2,1,1,3,1,2,2,2],
[1,1,2,3,1,1,2,1,1,2,1,1,2,3,1,1,2,1,1,2],
[3,2,1,1,3,0,2,2,1,0,3,2,1,1,3,0,2,2,1,0],
[0,2,2,2,2,3,0,2,2,3,0,2,2,2,2,3,0,2,2,3],
[2,1,1,2,0,2,3,1,0,2,2,1,1,2,0,2,3,1,0,2],
[1,1,3,3,1,3,0,3,1,0,1,1,3,3,1,3,0,3,1,0],
[1,1,2,2,1,0,2,2,3,2,1,1,2,2,1,0,2,2,3,2],
[0,3,0,1,1,2,3,0,2,1,0,3,0,1,1,2,3,0,2,1],
[1,2,3,1,0,2,3,0,1,1,1,2,3,1,0,2,3,0,1,1],
[1,2,3,3,1,2,0,1,3,1,1,2,3,3,1,2,0,1,3,1],
[2,2,0,2,2,1,2,2,0,3,2,2,0,2,2,1,2,2,0,3],
[1,1,2,2,3,0,2,1,1,0,1,1,2,2,3,0,2,1,1,0],
[0,1,0,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1]];

st15=9;	// Start point
ex15=1;	// Exit point
maze15=[
[3,0,2,1,1,3,1,2,2,2,3,0,2,1,1,3,1,2,2,2],
[1,1,2,3,1,1,2,1,1,2,1,1,2,3,1,1,2,1,1,2],
[3,2,1,1,3,0,2,2,1,0,3,2,1,1,3,0,2,2,1,0],
[0,2,2,2,2,3,0,2,2,3,0,2,2,2,2,3,0,2,2,3],
[2,1,1,2,0,2,3,1,0,2,2,1,1,2,0,2,3,1,0,2],
[1,1,3,3,1,3,0,3,1,0,1,1,3,3,1,3,0,3,1,0],
[1,1,2,2,1,0,2,2,3,2,1,1,2,2,1,0,2,2,3,2],
[0,3,0,1,1,2,3,0,2,1,0,3,0,1,1,2,3,0,2,1],
[1,2,3,1,0,2,3,0,1,1,1,2,3,1,0,2,3,0,1,1],
[1,2,3,3,1,2,0,1,3,1,1,2,3,3,1,2,0,1,3,1],
[2,2,0,2,2,1,2,2,0,3,2,2,0,2,2,1,2,2,0,3],
[1,1,2,2,3,0,2,1,1,0,1,1,2,2,3,0,2,1,1,0],
[0,1,0,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1]];

st16=9;	// Start point
ex16=1;	// Exit point
maze16=[
[3,0,2,1,1,3,1,2,2,2,3,0,2,1,1,3,1,2,2,2],
[1,1,2,3,1,1,2,1,1,2,1,1,2,3,1,1,2,1,1,2],
[3,2,1,1,3,0,2,2,1,0,3,2,1,1,3,0,2,2,1,0],
[0,2,2,2,2,3,0,2,2,3,0,2,2,2,2,3,0,2,2,3],
[2,1,1,2,0,2,3,1,0,2,2,1,1,2,0,2,3,1,0,2],
[1,1,3,3,1,3,0,3,1,0,1,1,3,3,1,3,0,3,1,0],
[1,1,2,2,1,0,2,2,3,2,1,1,2,2,1,0,2,2,3,2],
[0,3,0,1,1,2,3,0,2,1,0,3,0,1,1,2,3,0,2,1],
[1,2,3,1,0,2,3,0,1,1,1,2,3,1,0,2,3,0,1,1],
[1,2,3,3,1,2,0,1,3,1,1,2,3,3,1,2,0,1,3,1],
[2,2,0,2,2,1,2,2,0,3,2,2,0,2,2,1,2,2,0,3],
[1,1,2,2,3,0,2,1,1,0,1,1,2,2,3,0,2,1,1,0],
[0,1,0,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1]];

st17=9;	// Start point
ex17=1;	// Exit point
maze17=[
[3,0,2,1,1,3,1,2,2,2,3,0,2,1,1,3,1,2,2,2],
[1,1,2,3,1,1,2,1,1,2,1,1,2,3,1,1,2,1,1,2],
[3,2,1,1,3,0,2,2,1,0,3,2,1,1,3,0,2,2,1,0],
[0,2,2,2,2,3,0,2,2,3,0,2,2,2,2,3,0,2,2,3],
[2,1,1,2,0,2,3,1,0,2,2,1,1,2,0,2,3,1,0,2],
[1,1,3,3,1,3,0,3,1,0,1,1,3,3,1,3,0,3,1,0],
[1,1,2,2,1,0,2,2,3,2,1,1,2,2,1,0,2,2,3,2],
[0,3,0,1,1,2,3,0,2,1,0,3,0,1,1,2,3,0,2,1],
[1,2,3,1,0,2,3,0,1,1,1,2,3,1,0,2,3,0,1,1],
[1,2,3,3,1,2,0,1,3,1,1,2,3,3,1,2,0,1,3,1],
[2,2,0,2,2,1,2,2,0,3,2,2,0,2,2,1,2,2,0,3],
[1,1,2,2,3,0,2,1,1,0,1,1,2,2,3,0,2,1,1,0],
[0,1,0,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1]];

st18=3;	// Start point
ex18=5;	// Exit point
maze18=[
[1,1,1,2,3,1,0,1,1,3,1,1,1,2,3,1,0,1,1,3],
[3,1,2,0,2,3,1,1,1,0,3,1,2,0,2,3,1,1,1,0],
[2,3,1,1,0,1,1,1,1,2,2,3,1,1,0,1,1,1,1,2],
[2,2,3,1,1,1,1,1,1,2,2,2,3,1,1,1,1,1,1,2],
[2,0,2,2,3,2,1,2,1,0,2,0,2,2,3,2,1,2,1,0],
[1,3,1,1,0,1,2,2,3,1,1,3,1,1,0,1,2,2,3,1],
[1,2,1,1,3,0,0,1,2,2,1,2,1,1,3,0,0,1,2,2],
[2,1,1,1,1,1,3,2,1,1,2,1,1,1,1,1,3,2,1,1],
[1,1,3,1,2,2,0,0,3,2,1,1,3,1,2,2,0,0,3,2],
[1,2,0,3,1,0,2,3,2,1,1,2,0,3,1,0,2,3,2,1],
[2,0,3,0,3,1,0,2,1,1,2,0,3,0,3,1,0,2,1,1],
[2,3,0,2,2,3,2,2,3,0,2,3,0,2,2,3,2,2,3,0],
[1,1,1,1,0,0,1,0,1,1,1,1,1,1,0,0,1,0,1,1]];

st19=9;	// Start point
ex19=1;	// Exit point
maze19=[
[3,0,2,1,1,3,1,2,2,2,3,0,2,1,1,3,1,2,2,2],
[1,1,2,3,1,1,2,1,1,2,1,1,2,3,1,1,2,1,1,2],
[3,2,1,1,3,0,2,2,1,0,3,2,1,1,3,0,2,2,1,0],
[0,2,2,2,2,3,0,2,2,3,0,2,2,2,2,3,0,2,2,3],
[2,1,1,2,0,2,3,1,0,2,2,1,1,2,0,2,3,1,0,2],
[1,1,3,3,1,3,0,3,1,0,1,1,3,3,1,3,0,3,1,0],
[1,1,2,2,1,0,2,2,3,2,1,1,2,2,1,0,2,2,3,2],
[0,3,0,1,1,2,3,0,2,1,0,3,0,1,1,2,3,0,2,1],
[1,2,3,1,0,2,3,0,1,1,1,2,3,1,0,2,3,0,1,1],
[1,2,3,3,1,2,0,1,3,1,1,2,3,3,1,2,0,1,3,1],
[2,2,0,2,2,1,2,2,0,3,2,2,0,2,2,1,2,2,0,3],
[1,1,2,2,3,0,2,1,1,0,1,1,2,2,3,0,2,1,1,0],
[0,1,0,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1]];

st1A=9;	// Start point
ex1A=1;	// Exit point
maze1A=[
[3,0,2,1,1,3,1,2,2,2,3,0,2,1,1,3,1,2,2,2],
[1,1,2,3,1,1,2,1,1,2,1,1,2,3,1,1,2,1,1,2],
[3,2,1,1,3,0,2,2,1,0,3,2,1,1,3,0,2,2,1,0],
[0,2,2,2,2,3,0,2,2,3,0,2,2,2,2,3,0,2,2,3],
[2,1,1,2,0,2,3,1,0,2,2,1,1,2,0,2,3,1,0,2],
[1,1,3,3,1,3,0,3,1,0,1,1,3,3,1,3,0,3,1,0],
[1,1,2,2,1,0,2,2,3,2,1,1,2,2,1,0,2,2,3,2],
[0,3,0,1,1,2,3,0,2,1,0,3,0,1,1,2,3,0,2,1],
[1,2,3,1,0,2,3,0,1,1,1,2,3,1,0,2,3,0,1,1],
[1,2,3,3,1,2,0,1,3,1,1,2,3,3,1,2,0,1,3,1],
[2,2,0,2,2,1,2,2,0,3,2,2,0,2,2,1,2,2,0,3],
[1,1,2,2,3,0,2,1,1,0,1,1,2,2,3,0,2,1,1,0],
[0,1,0,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1]];

//Outer Mazes

st21=9;  // Start point
ex21=0;  // Exit point
maze21=[
[3,1,1,1,0,3,1,3,0,3,1,2,2,3,1,1,1,0,3,1,3,0,3,1,2,2],
[2,3,2,2,1,1,0,2,2,1,0,2,2,2,3,2,2,1,1,0,2,2,1,0,2,2],
[2,0,2,2,3,1,1,0,1,3,2,1,1,2,0,2,2,3,1,1,0,1,3,2,1,1],
[1,1,0,2,3,1,1,2,2,2,2,3,1,1,1,0,2,3,1,1,2,2,2,2,3,1],
[2,3,1,1,1,1,2,0,2,2,1,1,1,2,3,1,1,1,1,2,0,2,2,1,1,1],
[2,1,1,0,3,1,1,2,1,2,3,3,0,2,1,1,0,3,1,1,2,1,2,3,3,0],
[1,1,1,0,2,3,1,0,2,2,0,1,1,1,1,1,0,2,3,1,0,2,2,0,1,1],
[1,3,3,2,2,1,1,0,3,0,3,1,1,1,3,3,2,2,1,1,0,3,0,3,1,1],
[3,2,0,1,1,1,0,3,0,2,2,2,1,3,2,0,1,1,1,0,3,0,2,2,2,1],
[2,1,1,1,2,3,1,1,2,2,1,2,3,2,1,1,1,2,3,1,1,2,2,1,2,3],
[3,1,1,2,2,0,3,1,2,2,1,0,2,3,1,1,2,2,0,3,1,2,2,1,0,2],
[0,3,2,2,3,1,0,2,0,1,1,3,0,0,3,2,2,3,1,0,2,0,1,1,3,0],
[3,2,2,2,1,1,1,1,2,3,2,2,2,3,2,2,2,1,1,1,1,2,3,2,2,2],
[0,0,1,1,1,1,0,1,0,0,1,1,0,0,0,1,1,1,1,0,1,0,0,1,1,0]];

st22=3;	  // Start point
ex22=14;  // Exit point
maze22=[
[3,0,3,2,3,1,1,1,3,1,1,3,1,3,0,3,2,3,1,1,1,3,1,1,3,1],
[0,2,2,0,1,2,1,2,1,0,3,0,1,0,2,2,0,1,2,1,2,1,0,3,0,1],
[1,0,1,1,2,1,2,1,1,1,1,2,3,1,0,1,1,2,1,2,1,1,1,1,2,3],
[1,1,2,2,2,3,1,0,1,3,0,2,1,1,1,2,2,2,3,1,0,1,3,0,2,1],
[2,2,3,2,2,1,0,2,3,2,3,0,3,2,2,3,2,2,1,0,2,3,2,3,0,3],
[2,2,0,2,1,1,1,1,2,2,1,2,2,2,2,0,2,1,1,1,1,2,2,1,2,2],
[2,3,1,3,1,1,0,2,0,3,2,2,0,2,3,1,3,1,1,0,2,0,3,2,2,0],
[0,2,3,3,1,1,2,1,2,2,3,2,3,0,2,3,3,1,1,2,1,2,2,3,2,3],
[2,2,2,2,3,1,2,2,1,2,2,0,1,2,2,2,2,3,1,2,2,1,2,2,0,1],
[2,0,2,2,0,2,1,1,0,2,2,3,2,2,0,2,2,0,2,1,1,0,2,2,3,2],
[1,1,0,1,2,1,1,1,1,0,2,2,3,1,1,0,1,2,1,1,1,1,0,2,2,3],
[2,1,2,1,1,2,3,1,2,3,0,2,2,2,1,2,1,1,2,3,1,2,3,0,2,2],
[2,2,1,1,1,2,2,1,1,1,0,2,2,2,2,1,1,1,2,2,1,1,1,0,2,2],
[0,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,0,1]];

st23=6;  // Start point
ex23=3;  // Exit point
maze23=[
[1,0,3,2,3,2,1,3,0,1,1,1,3,1,0,3,2,3,2,1,3,0,1,1,1,3],
[1,1,2,3,0,3,1,0,3,2,2,3,0,1,1,2,3,0,3,1,0,3,2,2,3,0],
[2,2,2,2,1,1,1,0,2,2,3,1,1,2,2,2,2,1,1,1,0,2,2,3,1,1],
[2,2,2,1,1,2,1,1,0,2,1,2,2,2,2,2,1,1,2,1,1,0,2,1,2,2],
[2,3,1,0,1,0,1,1,2,3,2,1,0,2,3,1,0,1,0,1,1,2,3,2,1,0],
[3,0,3,1,1,1,1,1,0,0,3,1,2,3,0,3,1,1,1,1,1,0,0,3,1,2],
[2,1,1,1,1,1,1,1,1,2,1,2,1,2,1,1,1,1,1,1,1,1,2,1,2,1],
[1,2,2,3,1,1,1,1,2,1,2,2,2,1,2,2,3,1,1,1,1,2,1,2,2,2],
[2,2,2,3,1,2,2,1,2,2,2,0,3,2,2,2,3,1,2,2,1,2,2,2,0,3],
[1,3,0,1,2,0,2,2,2,2,2,3,0,1,3,0,1,2,0,2,2,2,2,2,3,0],
[1,3,1,1,1,1,2,2,0,2,2,2,1,1,3,1,1,1,1,2,2,0,2,2,2,1],
[3,1,2,2,3,2,3,0,3,0,1,1,0,3,1,2,2,3,2,3,0,3,0,1,1,0],
[3,0,1,0,0,1,2,3,0,3,3,1,1,3,0,1,0,0,1,2,3,0,3,3,1,1],
[1,1,0,1,1,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,1,1,0,1,0,1]];

st24=9;	// Start point
ex24=22;	// Exit point
maze24=[
[1,1,1,1,3,1,1,3,1,2,1,1,1,1,1,1,1,3,1,1,3,1,2,1,1,1],
[1,1,1,1,2,2,3,1,0,3,1,1,2,1,1,1,1,2,2,3,1,0,3,1,1,2],
[1,1,1,0,2,1,2,1,2,2,3,0,1,1,1,1,0,2,1,2,1,2,2,3,0,1],
[1,2,1,1,1,2,2,2,2,0,2,3,2,1,2,1,1,1,2,2,2,2,0,2,3,2],
[1,2,1,1,2,2,1,0,3,1,1,0,1,1,2,1,1,2,2,1,0,3,1,1,0,1],
[3,1,1,1,0,1,2,3,0,1,2,3,2,3,1,1,1,0,1,2,3,0,1,2,3,2],
[0,3,1,1,0,3,2,2,3,1,1,0,2,0,3,1,1,0,3,2,2,3,1,1,0,2],
[0,2,1,1,2,0,1,1,0,2,1,3,3,0,2,1,1,2,0,1,1,0,2,1,3,3],
[1,0,3,1,0,2,2,3,2,1,1,0,3,1,0,3,1,0,2,2,3,2,1,1,0,3],
[2,3,1,1,1,1,1,0,1,1,1,1,2,2,3,1,1,1,1,1,0,1,1,1,1,2],
[1,1,3,0,1,1,2,1,3,1,1,0,2,1,1,3,0,1,1,2,1,3,1,1,0,2],
[1,2,0,1,1,2,2,3,1,1,2,2,1,1,2,0,1,1,2,2,3,1,1,2,2,1],
[1,2,3,1,1,0,2,2,3,1,2,2,1,1,2,3,1,1,0,2,2,3,1,2,2,1],
[1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1]];

st25=7;	// Start point
ex25=8;	// Exit point
maze25=[
[2,1,2,1,3,3,2,1,1,3,2,3,1,2,1,2,1,3,3,2,1,1,3,2,3,1],
[1,2,3,0,0,2,1,1,2,0,2,1,2,1,2,3,0,0,2,1,1,2,0,2,1,2],
[2,2,1,1,3,0,2,1,0,2,3,0,2,2,2,1,1,3,0,2,1,0,2,3,0,2],
[3,1,0,3,0,3,0,1,2,2,3,1,0,3,1,0,3,0,3,0,1,2,2,3,1,0],
[1,3,1,2,2,3,1,2,2,2,0,1,1,1,3,1,2,2,3,1,2,2,2,0,1,1],
[2,2,2,2,1,1,0,2,2,1,1,2,1,2,2,2,2,1,1,0,2,2,1,1,2,1],
[2,1,2,1,0,2,3,1,1,3,2,1,1,2,1,2,1,0,2,3,1,1,3,2,1,1],
[1,3,3,2,3,0,0,3,2,2,2,3,1,1,3,3,2,3,0,0,3,2,2,2,3,1],
[1,2,2,2,2,3,1,2,3,2,0,2,3,1,2,2,2,2,3,1,2,3,2,0,2,3],
[3,2,2,2,2,2,2,0,0,1,1,2,0,3,2,2,2,2,2,2,0,0,1,1,2,0],
[0,2,0,2,2,2,3,1,1,2,1,0,3,0,2,0,2,2,2,3,1,1,2,1,0,3],
[2,2,2,2,2,2,1,2,2,2,2,3,0,2,2,2,2,2,2,1,2,2,2,2,3,0],
[1,0,2,2,2,1,1,0,2,0,2,2,1,1,0,2,2,2,1,1,0,2,0,2,2,1],
[0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1]];

st26=3;	// Start point
ex26=10;	// Exit point
maze26=[
[3,1,2,1,3,2,3,1,3,2,1,1,2,3,1,2,1,3,2,3,1,3,2,1,1,2],
[1,2,0,2,2,1,1,0,2,3,1,0,2,1,2,0,2,2,1,1,0,2,3,1,0,2],
[2,1,2,2,2,3,1,1,0,2,3,0,1,2,1,2,2,2,3,1,1,0,2,3,0,1],
[1,3,0,2,2,2,1,3,0,2,1,2,3,1,3,0,2,2,2,1,3,0,2,1,2,3],
[2,1,0,2,0,2,1,3,2,3,0,2,3,2,1,0,2,0,2,1,3,2,3,0,2,3],
[1,1,1,1,0,1,1,0,2,2,3,2,2,1,1,1,1,0,1,1,0,2,2,3,2,2],
[3,1,0,3,1,2,3,2,2,2,2,2,1,3,1,0,3,1,2,3,2,2,2,2,2,1],
[1,1,3,1,2,2,2,2,2,0,2,1,0,1,1,3,1,2,2,2,2,2,0,2,1,0],
[1,1,1,0,0,2,2,2,1,3,1,3,1,1,1,1,0,0,2,2,2,1,3,1,3,1],
[1,1,1,2,1,2,2,2,2,2,3,0,3,1,1,1,2,1,2,2,2,2,2,3,0,3],
[1,3,2,3,0,0,2,2,2,0,1,1,2,1,3,2,3,0,0,2,2,2,0,1,1,2],
[3,0,2,0,3,2,2,1,2,3,1,2,1,3,0,2,0,3,2,2,1,2,3,1,2,1],
[0,2,2,3,2,2,2,2,1,1,0,1,3,0,2,2,3,2,2,2,2,1,1,0,1,3],
[1,0,1,0,0,0,1,1,1,1,0,1,1,1,0,1,0,0,0,1,1,1,1,0,1,1]];

st27=6;	// Start point
ex27=12;	// Exit point
maze27=[
[1,3,1,1,1,2,1,3,3,0,3,3,0,1,3,1,1,1,2,1,3,3,0,3,3,0],
[1,2,3,1,2,1,0,0,2,3,0,0,3,1,2,3,1,2,1,0,0,2,3,0,0,3],
[0,2,0,1,3,1,1,1,0,2,1,1,1,0,2,0,1,3,1,1,1,0,2,1,1,1],
[1,2,3,1,1,1,3,1,1,1,0,1,1,1,2,3,1,1,1,3,1,1,1,0,1,1],
[1,1,2,3,3,2,1,2,1,1,1,1,1,1,1,2,3,3,2,1,2,1,1,1,1,1],
[0,1,3,0,2,2,2,3,0,1,1,3,1,0,1,3,0,2,2,2,3,0,1,1,3,1],
[1,2,1,2,2,0,1,0,1,1,3,1,1,1,2,1,2,2,0,1,0,1,1,3,1,1],
[1,3,3,0,3,1,3,0,1,1,0,1,1,1,3,3,0,3,1,3,0,1,1,0,1,1],
[3,2,0,1,0,1,3,1,1,0,3,1,1,3,2,0,1,0,1,3,1,1,0,3,1,1],
[2,3,1,1,3,0,2,1,1,3,0,1,2,2,3,1,1,3,0,2,1,1,3,0,1,2],
[0,3,3,2,0,2,2,3,0,3,1,0,1,0,3,3,2,0,2,2,3,0,3,1,0,1],
[1,0,0,1,1,2,3,2,2,1,2,2,1,1,0,0,1,1,2,3,2,2,1,2,2,1],
[1,1,1,1,1,0,0,1,0,2,1,2,1,1,1,1,1,1,0,0,1,0,2,1,2,1],
[1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1]];

st28=7;	// Start point
ex28=15;	// Exit point
maze28=[
[3,2,3,3,1,2,2,1,2,3,2,3,0,3,2,3,3,1,2,2,1,2,3,2,3,0],
[0,2,0,2,2,2,3,2,2,2,2,1,3,0,2,0,2,2,2,3,2,2,2,2,1,3],
[3,0,2,2,2,0,2,2,1,0,2,2,0,3,0,2,2,2,0,2,2,1,0,2,2,0],
[2,3,2,2,2,1,0,3,1,1,0,3,2,2,3,2,2,2,1,0,3,1,1,0,3,2],
[0,2,1,3,3,1,1,2,2,2,3,2,1,0,2,1,3,3,1,1,2,2,2,3,2,1],
[3,0,2,2,3,1,0,0,2,1,2,0,2,3,0,2,2,3,1,0,0,2,1,2,0,2],
[3,0,2,0,2,1,1,2,1,1,1,2,2,3,0,2,0,2,1,1,2,1,1,1,2,2],
[0,3,1,1,1,0,1,1,1,1,1,1,3,0,3,1,1,1,0,1,1,1,1,1,1,3],
[1,1,2,1,3,1,1,1,1,1,3,2,2,1,1,2,1,3,1,1,1,1,1,3,2,2],
[1,2,1,0,0,2,3,2,3,3,0,3,1,1,2,1,0,0,2,3,2,3,3,0,3,1],
[0,2,1,1,2,1,0,2,0,2,2,2,3,0,2,1,1,2,1,0,2,0,2,2,2,3],
[3,0,3,1,1,1,0,1,1,3,2,2,2,3,0,3,1,1,1,0,1,1,3,2,2,2],
[0,2,3,1,1,1,1,3,1,0,2,2,3,0,2,3,1,1,1,1,3,1,0,2,2,3],
[1,0,0,1,1,1,1,0,1,1,0,0,1,1,0,0,1,1,1,1,0,1,1,0,0,1]];

st29=3;	// Start point
ex29=21;	// Exit point
maze29=[
[1,3,0,1,2,3,1,1,1,3,0,1,2,1,3,0,1,2,3,1,1,1,3,0,1,2],
[2,2,2,2,2,0,3,1,2,3,1,2,1,2,2,2,2,2,0,3,1,2,3,1,2,1],
[2,3,2,1,1,1,2,2,2,1,0,3,2,2,3,2,1,1,1,2,2,2,1,0,3,2],
[2,0,2,1,1,2,2,3,0,3,2,2,0,2,0,2,1,1,2,2,3,0,3,2,2,0],
[3,1,0,2,1,2,2,3,1,0,0,2,2,3,1,0,2,1,2,2,3,1,0,0,2,2],
[2,3,1,2,2,2,2,1,2,2,3,1,2,2,3,1,2,2,2,2,1,2,2,3,1,2],
[2,1,2,3,0,2,1,2,0,3,0,3,2,2,1,2,3,0,2,1,2,0,3,0,3,2],
[1,0,2,2,3,1,1,1,1,0,3,0,1,1,0,2,2,3,1,1,1,1,0,3,0,1],
[3,0,0,2,1,2,1,1,1,1,2,3,2,3,0,0,2,1,2,1,1,1,1,2,3,2],
[1,3,1,3,2,0,3,1,1,2,1,0,1,1,3,1,3,2,0,3,1,1,2,1,0,1],
[1,3,2,2,1,1,0,1,1,2,3,3,1,1,3,2,2,1,1,0,1,1,2,3,3,1],
[1,0,2,2,1,3,0,1,2,2,2,1,2,1,0,2,2,1,3,0,1,2,2,2,1,2],
[0,3,0,1,1,1,1,2,2,2,2,1,1,0,3,0,1,1,1,1,2,2,2,2,1,1],
[1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,1,0,1,1,1,0,1,0,1,1,0]];

st2A=7;	// Start point
ex2A=19;	// Exit point
maze2A=[
[1,0,3,1,2,3,2,3,3,2,2,1,3,1,0,3,1,2,3,2,3,3,2,2,1,3],
[1,2,2,2,0,0,2,2,0,2,2,2,3,1,2,2,2,0,0,2,2,0,2,2,2,3],
[1,3,0,3,1,2,2,2,1,1,2,2,0,1,3,0,3,1,2,2,2,1,1,2,2,0],
[2,2,2,2,1,1,0,0,3,0,2,3,1,2,2,2,2,1,1,0,0,3,0,2,3,1],
[2,2,2,2,3,2,1,3,1,2,2,2,1,2,2,2,2,3,2,1,3,1,2,2,2,1],
[2,1,2,2,2,0,2,0,3,0,1,0,2,2,1,2,2,2,0,2,0,3,0,1,0,2],
[3,2,2,2,2,1,3,1,2,1,2,2,1,3,2,2,2,2,1,3,1,2,1,2,2,1],
[0,3,0,2,3,1,2,2,0,1,3,0,1,0,3,0,2,3,1,2,2,0,1,3,0,1],
[1,2,3,1,0,1,0,2,1,1,3,3,1,1,2,3,1,0,1,0,2,1,1,3,3,1],
[2,3,1,3,3,3,2,1,1,1,0,2,1,2,3,1,3,3,3,2,1,1,1,0,2,1],
[1,1,2,2,2,2,1,3,1,3,2,2,3,1,1,2,2,2,2,1,3,1,3,2,2,3],
[1,0,0,2,2,2,2,2,1,2,0,2,3,1,0,0,2,2,2,2,2,1,2,0,2,3],
[1,2,1,0,0,2,2,0,2,2,3,0,1,1,2,1,0,0,2,2,0,2,2,3,0,1],
[1,0,1,1,1,0,1,1,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,1,1,0]];

startInner=(model=="1" && inner==1)?st01:
	  (model=="2" && inner==2)?st02:
	  (model=="3" && inner==3)?st03:
	  (model=="4" && inner==4)?st04:
	  (model=="5" && inner==5)?st05:
	  (model=="6" && inner==6)?st06:
	  (model=="7" && inner==7)?st07:
	  (model=="8" && inner==8)?st08:
	  (model=="9" && inner==9)?st09:
	  (model=="10" && inner==10)?st0A:
	  st01;

startCenter=(model=="1" && center==1)?st11:
	   (model=="2" && center==2)?st12:
	   (model=="3" && center==3)?st13:
	   (model=="4" && center==4)?st14:
	   (model=="5" && center==5)?st15:
	   (model=="6" && center==6)?st16:
	   (model=="7" && center==7)?st17:
	   (model=="8" && center==8)?st18:
	   (model=="9" && center==9)?st19:
	   (model=="10" && center==10)?st1A:
	   st11;
	   	
startOuter=(model=="1" && outer==1)?st21:
	   (model=="2" && outer==2)?st22:
	   (model=="3" && outer==3)?st23:
	   (model=="4" && outer==4)?st24:
	   (model=="5" && outer==5)?st25:
	   (model=="6" && outer==6)?st26:
	   (model=="7" && outer==7)?st27:
	   (model=="8" && outer==8)?st28:
	   (model=="9" && outer==9)?st29:
	   (model=="10" && outer==10)?st2A:
	   st21;
	   
st=(outer==1)?startOuter:(center==1)?startCenter:startInner;
	  
exitInner=(model=="1" && inner==1)?ex01:
	  (model=="2" && inner==2)?ex02:
	  (model=="3" && inner==3)?ex03:
	  (model=="4" && inner==4)?ex04:
	  (model=="5" && inner==5)?ex05:
	  (model=="6" && inner==6)?ex06:
	  (model=="7" && inner==7)?ex07:
	  (model=="8" && inner==8)?ex08:
	  (model=="9" && inner==9)?ex09:
	  (model=="10" && inner==10)?ex0A:
	  ex01;

exitCenter=(model=="1" && center==1)?ex11:
	   (model=="2" && center==2)?ex12:
	   (model=="3" && center==3)?ex13:
	   (model=="4" && center==4)?ex14:
	   (model=="5" && center==5)?ex15:
	   (model=="6" && center==6)?ex16:
	   (model=="7" && center==7)?ex17:
	   (model=="8" && center==8)?ex18:
	   (model=="9" && center==9)?ex19:
	   (model=="10" && center==10)?ex1A:
	   ex11;
	   	
exitOuter=(model=="1" && outer==1)?ex21:
	   (model=="2" && outer==2)?ex22:
	   (model=="3" && outer==3)?ex23:
	   (model=="4" && outer==4)?ex24:
	   (model=="5" && outer==5)?ex25:
	   (model=="6" && outer==6)?ex26:
	   (model=="7" && outer==7)?ex27:
	   (model=="8" && outer==8)?ex28:
	   (model=="9" && outer==9)?ex29:
	   (model=="10" && outer==10)?ex2A:
	   ex21;
       
ex=(outer==1)?exitOuter:(center==1)?exitCenter:exitInner;

mazeInner=(model=="1" && inner==1)?maze01:
	 (model=="2" && inner==1)?maze02:
	 (model=="3" && inner==1)?maze03:
	 (model=="4" && inner==1)?maze04:
	 (model=="5" && inner==1)?maze05:
	 (model=="6" && inner==1)?maze06:
	 (model=="7" && inner==1)?maze07:
	 (model=="8" && inner==1)?maze08:
	 (model=="9" && inner==1)?maze09:
	 (model=="10" && inner==1)?maze0A:
     maze01;
     
mazeCenter=(model=="1" && center==1)?maze11:
	 (model=="2" && center==1)?maze12:
	 (model=="3" && center==1)?maze13:
	 (model=="4" && center==1)?maze14:
	 (model=="5" && center==1)?maze15:
	 (model=="6" && center==1)?maze16:
	 (model=="7" && center==1)?maze17:
	 (model=="8" && center==1)?maze18:
	 (model=="9" && center==1)?maze19:
	 (model=="10" && center==1)?maze1A:
     maze11;
     
mazeOuter=(model=="1" && outer==1)?maze21:
	 (model=="2" && outer==1)?maze22:
	 (model=="3" && outer==1)?maze23:
	 (model=="4" && outer==1)?maze24:
	 (model=="5" && outer==1)?maze25:
	 (model=="6" && outer==1)?maze26:
	 (model=="7" && outer==1)?maze27:
	 (model=="8" && outer==1)?maze28:
	 (model=="9" && outer==1)?maze29:
	 (model=="10" && outer==1)?maze2A:
	 maze21;
     
maze=(outer==1)?mazeOuter:(center==1)?mazeCenter:mazeInner;

/******** Create Models ********/

if(outer==1){
    if(piece=="lidOnly") {
        makelid();
    }
    else if(piece=="baseOnly") {
        makebase();
    }    
    else {
        if(base)
            translate([lid?(id+s*4+iw*2+wt*2)/2:0,0,0])
                makebase();
        if(lid)
            translate([base?-(id+s*4+iw*2+wt*2)/2:0,0,0])
                makelid();
    }
}    

if(outer!=1){    
    if(base)
        makebase();
}

/******** MODULES ********/

module knob()
{
    rotate([0,0,-90])
    rotate([90,0,0])
    rotate([0,0,45])
    hull()
    {
        cylinder(d=sqrt(2),h=(s-1)/2,$fn=4);
        translate([0,0,-1])
        cylinder(d=(s-1)*sqrt(2),h=1,$fn=4);
    }
}

module right()
{
    q=3.6;
    for(a=[0:q:360/w])
    hull()
    {
        rotate([0,0,a])
        translate([id/2+iw+s/2-m,0,0])
        knob();
        rotate([0,0,min(a+q,360/w)])
        translate([id/2+iw+s/2-m,0,0])
        knob();
    }
}

module up(q,d=id+iw*2+s)
{
        translate([d/2-m,0,0])
        hull()
        {
            knob();
            translate([0,0,q])
            knob();
        }
}

module outer(h)
{
    r=bd/2+m;
    minkowski()
    {
       cylinder(r=(r-wt)/cos(180/bs),h=h-wt,$fn=bs);
       cylinder(r1=0,r2=wt,h=wt,$fn=100);
    }
}


module aa(w=100,white=0,$fn=100)
{   // w is the 100%, centre line of outer ring, so overall size (white=0) if 1.005 times that
    scale(w/100)
    {
        if(!white)difference()
        {
            circle(d=100.5);
            circle(d=99.5);
        }
        difference()
        {
            if(white)circle(d=100);
            difference()
            {
                circle(d=92);
                for(m=[0,1])
                mirror([m,0,0])
                {
                    difference()
                    {
                        translate([24,0,0])
                        circle(r=22.5);
                        translate([24,0,0])
                        circle(r=15);
                    }
                    polygon([[1.5,22],[9,22],[9,-18.5],[1.5,-22]]);
                }
            }
        }
    }
}

module makebase()
{
    mm=(ih+wt-bh-s*h)/2+s/2+m*2;
    difference()
    {
        if(os)
	difference()
	{
   	   cylinder(d=bd-m*2,h=bh,$fn=100);
	   translate([0,0,-0.01])
	   difference()
	   {
		   cylinder(d=bd+2-m*2,h=2);
		   cylinder(d1=bd-2-m*2,d2=bd+4-m*2,h=3,$fn=100);
	   }
	}
	else
        outer(bh);
	hull()
	{
           translate([0,0,wt-1])
           cylinder(d=id+m*2-2,h=bh,$fn=100);
           translate([0,0,wt])
           cylinder(d=id+m*2,h=bh,$fn=100);
	}
	if(os)
	{
           for(a=[0:360/p:359])
           rotate([0,0,a])
	   up(bh,bd);
	}
    }
    rotate([0,0,-st*360/w])
    difference()
    {
        translate([0,0,bh-0.01])
        cylinder(d=id+iw*2+s-m*2,h=wt+ih-bh,$fn=100);
	difference()
	{
           translate([0,0,wt])
           cylinder(d=id+m*2,h=ih+1,$fn=100);
	   if(is)
	   {
              for(a=[0:360/p:359])
              rotate([0,0,a+ex*360/w])
              translate([id/2+m,0,wt+ih-s/2])
              knob();
	   }
	}
	if(!is)
	{
           translate([0,0,wt+ih-id/2-1])
           cylinder(d1=0,d2=id+m*2+4,h=id/2+2,$fn=100);
           difference()
            {
                translate([0,0,wt+ih-1])
                cylinder(d=id+iw*2+s*2,h=2);
                translate([0,0,wt+ih-3])
                cylinder(d1=id+iw*2+s-m*2+4,d2=0,h=(id+iw*2+s-m*2)/2+2,$fn=100);
            }
	}
        for(a=[0:360/p:359])
        rotate([0,0,a])
        {
            rotate([0,0,st*360/w])
            {
                translate([0,0,bh+s/2])
                up(0);
		o=s/2+2+(p==1?m:0);
                if(mm>o)
                translate([0,0,bh+o])
                up(mm-o);
            }
            rotate([0,0,ex*360/w])
            translate([0,0,bh+mm+s*(h-1)])
            up(mm);
        }
        // Maze
        for(y=[0:1:h-1])
        translate([0,0,bh+mm+y*s])
        render()
        for(x=[0:1:w-1])
        rotate([0,0,x*360/w])
        {
            if(maze[y][x]==1 || maze[y][x]==3)
                right();
            if(maze[y][x]==2 || maze[y][x]==3)
                up(s);
        }
    }
}

module makelid()
mirror([1,0,0])
{
    difference()
    {
        outer(ih-bh+wt*2+eh);
        difference()
        {
	    hull()
	    {
               translate([0,0,wt-1])
               cylinder(d=id+s+iw*2+m*2-2,h=ih+eh,$fn=100);
               translate([0,0,wt])
               cylinder(d=id+s+iw*2+m*2,h=ih+eh,$fn=100);
	    }
            translate([0,0,wt])
            for(a=[0:360/p:359])
            rotate([0,0,a])
            translate([id/2+iw+s/2+m,0,ih-bh-s/2+wt+eh])
            knob();
        } 
        translate([0,0,wt-2])
        linear_extrude(height=wt)
        aa((id+s+iw*2+m*2-2)/1.1,white=1);
    }
}
